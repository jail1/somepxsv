package ro.activemall.photoxserver.exceptions;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.ConstraintViolationException;

import org.apache.log4j.Logger;
import org.springframework.core.Ordered;
//import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.web.servlet.HandlerExceptionResolver;
import org.springframework.web.servlet.ModelAndView;

/**
 * 
 * @author Badu
 * 
 *         In case we need to store exceptions for debug purposes
 *
 */
public class LoggingHandlerExceptionResolver implements
		HandlerExceptionResolver, Ordered {
	private static Logger log = Logger
			.getLogger(LoggingHandlerExceptionResolver.class);

	// @Autowired
	// SimpMessagingTemplate template;

	@Override
	public int getOrder() {
		return Integer.MIN_VALUE;
	}

	@Override
	public ModelAndView resolveException(HttpServletRequest aRequest,
			HttpServletResponse aResponse, Object aHandler,
			Exception anException) {
		// Exceptions that have the message null are most probably generated by
		// us
		if (anException.getMessage() != null || !(anException instanceof ConstraintViolationException)) {
			// TODO : write this into database or send email to yourself.
			log.error("EXCEPTION", anException);
			// For debugging reasons, we can use websocket to serve the bad news
			// to Angular apps
			// template.convertAndSend("/topic/notify",
			// "{\"error\":\""+anException.getMessage()+"\"}");
		}
		return null;
	}

}
